//-*-C-*-
/*******************************************************************************
*   ___   workplace
*  ¦OUX¦  C+
*  ¦/C+¦  bieżący integrator systemowy
*   ---   server
*         command utilites
* ©overcq                on ‟Gentoo Linux 13.0” “x86_64”              2015‒7‒4 *
*******************************************************************************/
void
E_cmd_Z_argv_I_exec( Pc cwd
, Pc *pre_argv
, N pre_argc
, Pc *mime_argv
, Pc *cmd_argv
, N cmd_argc
){  V0_( daemon( yes, yes ));
    N mime_argc = 0;
    for( Pc *arg = mime_argv; *arg; arg++ )
        mime_argc++;
    E_flow_I_fork_I_exec( cwd, ( struct E_flow_Z_args [] ){ pre_argc, pre_argv, mime_argc, mime_argv, cmd_argc, cmd_argv }, 3 );
}
//------------------------------------------------------------------------------
void
E_cmd_Z_argv_I_exec_I_0( Pc cwd
, Pc *mime_argv
, Pc *cmd_argv
, N cmd_argc
){  E_cmd_Z_argv_I_exec( cwd, 0, 0, mime_argv, cmd_argv, cmd_argc );
}
void
E_cmd_Z_argv_I_exec_I_terminal_args( Pc cwd
, Pc *mime_argv
, Pc *cmd_argv
, N cmd_argc
){  N pre_argc = 4;
    static Pc pre_argv[] = { "urxvtc", "-e" , "sh", "-c" };
    pre_argv[2] = cmd_argv[1];
    if( !*mime_argv
    && !cmd_argc
    )
        E_cmd_Z_argv_I_exec_I_terminal( cwd, mime_argv, cmd_argv, cmd_argc );
    E_cmd_Z_argv_I_exec( cwd, pre_argv, pre_argc, mime_argv, cmd_argv, cmd_argc );
}
void
E_cmd_Z_argv_I_exec_I_terminal( Pc cwd
, Pc *mime_argv
, Pc *cmd_argv
, N cmd_argc
){  N pre_argc = 2;
    static Pc pre_argv[] = { "urxvtc", "-e" };
    if( !*mime_argv
    && !cmd_argc
    )
        pre_argv[ --pre_argc ] = 0;
    E_cmd_Z_argv_I_exec( cwd, pre_argv, pre_argc, mime_argv, cmd_argv, cmd_argc );
}
void
E_cmd_Z_argv_I_exec_I_terminal_mplayer( Pc cwd
, Pc *mime_argv
, Pc *cmd_argv
, N cmd_argc
){  if( cmd_argc == 1 )
    {   Pc file = E_text_Z_s_R_c_search_last( cmd_argv[0], E_text_Z_s0_R_end( cmd_argv[0] ), E_mem_Q_file_S_filename_separator );
        if( *cmd_argv[0] != E_mem_Q_file_S_filename_separator )
        {   V0( chdir(cwd) )
                return;
        }
        cwd = M( file - cmd_argv[0] + 1 );
        if( !cwd )
            return;
        E_text_Z_s_P_s_copy_0( cwd, cmd_argv[0], file );
        cmd_argv[0] = file + 1;
    }
    E_cmd_Z_argv_I_exec_I_terminal( cwd, mime_argv, cmd_argv, cmd_argc );
}
/******************************************************************************/
