//-*-C-*-
/*******************************************************************************
*   ___   workplace
*  ¦OUX¦  C+
*  ¦/C+¦  bieżący integrator systemowy
*   ---   server
*         entry and raw labels
* ©overcq                on ‟Gentoo Linux 13.0” “x86_64”             2015‒6‒27 *
*******************************************************************************/
int
main(
  int argc
, char *argv[]
){  E_base_M( argc, argv );
    V0_( chdir( E_const_P_home_dir ));
    N ret = E_desk_cmd_M();
    if(ret)
        return (int)ret;
    ret = E_rox_filer_M();
    if(ret)
        return (int)ret;
    X_M( main, none );
    if( _X_var( main, none ) < 0 )
        return (int)_X_var( main, none );
    O{  X_B( main, none, 0 )
            break;
    }
    ret = X_W( main, none );
    if(ret)
        return (int)ret;
    ret = E_rox_filer_W();
    if(ret)
        return (int)ret;
    ret = E_desk_cmd_W();
    if(ret)
        return (int)ret;
    ret = E_base_W();
    if(ret)
        return (int)ret;
    return EXIT_SUCCESS;
}
//==============================================================================
void
E_flow_Q_process_call_I_func( P data
){  N *ret = data;
    N *data_n = data;
    N func = *data_n++;
    N argc = *data_n++;
    switch(func)
    { case 0: // Desktop commands.
            if( argc >= 1 )
            {   *ret = E_desk_cmd_I_func( argc, data_n );
                if( (S)*ret < 0 )
                    exit( (int)*ret );
                E_mem_Q_sys_table_I_reduce();
                return;
            }
            break;
      case 1: // ‟Rox filer” “mime” handler.
            if( argc == 2 )
            {   *ret = E_rox_filer_I_func( data_n );
                if( (S)*ret < 0 )
                    exit( (int)*ret );
                E_mem_Q_sys_table_I_reduce();
                return;
            }
            break;
      default:
        {   GV(NKN); Gd(func);
            break;
        }
    }
    *ret = 1;
}
/******************************************************************************/
