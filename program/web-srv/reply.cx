/*******************************************************************************
*   ___   workplace
*  ¦OUX¦  ‟Coux”
*  ¦Inc¦  server
*   ---   web server
*         ‘HTTP’ replies
* ©overcq                on ‟Gentoo Linux 17.1” “x86_64”             2020‒4‒13 M
*******************************************************************************/
struct E_reply_Z_status_msg
{ N code;
  Pc s;
}E_reply_S_status_msg[] =
{ { 200, "OK" }
, { 400, "Bad Request" }
, { 403, "Forbidden" }
, { 404, "Not Found" }
, { 500, "Internal Server Error" }
};
N E_reply_S_status_msg_n = 5;
//==============================================================================
N
E_reply_I_data( int fd
, Pc s
, N l
){  N l_;
    O{  VO1( l_ = write( fd, s, l ))
            return ~0;
        if( !( l -= l_ ))
            break;
    }
    return 0;
}
N
E_reply_I_code( int fd
, N code
){  for_n( i, E_reply_S_status_msg_n )
        if( E_reply_S_status_msg[i].code == code )
        {   N l = 9 + 4 + E_text_Z_s0_R_l( E_reply_S_status_msg[i].s ) + 2;
            if( E_reply_S_status_msg[i].code != 200 )
                l += E_text_Z_s0_R_l( "Connection: close\r\n" ) + 2;
            Pc s = M(l);
            if( !s )
                return ~0;
            E_text_Z_s0_P_copy( s, "HTTP/1.1 " );
            E_text_Z_n_N_s( s + 9 + 3, E_reply_S_status_msg[i].code, sizeof( E_reply_S_status_msg[i].code ), 10 );
            *( s + 9 + 3 ) = ' ';
            Pc s_1 = E_text_Z_s0_P_copy( E_text_Z_s0_P_copy( s + 9 + 4, E_reply_S_status_msg[i].s ), "\r\n" );
            if( E_reply_S_status_msg[i].code != 200 )
                E_text_Z_s0_P_copy( s_1, "Connection: close\r\n\r\n" );
            if( !~E_reply_I_data( fd, s, l ))
            {   W(s);
                return ~0;
            }
            W(s);
            return 0;
        }
    E_reply_I_code( fd, 500 );
    return ~0;
}
/******************************************************************************/
